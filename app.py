# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hRuzkSICyJ3tq7mpgBfChgSjLH6yTS0b
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.metrics import accuracy_score

# ฟังก์ชันสำหรับโหลดข้อมูลจากไฟล์คงที่
def load_fixed_data():
    return pd.read_csv("color.csv")

# ฟังก์ชันสำหรับ Train โมเดล
def train_model(df):
    X = df[['R', 'G', 'B']] / 255.0  # Normalize RGB
    y = df['season']

    # แปลง Labels เป็นตัวเลข
    label_encoder = LabelEncoder()
    y_encoded = label_encoder.fit_transform(y)

    # แบ่งข้อมูล Train, Test
    X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.3, random_state=42)

    # ปรับขนาดข้อมูล
    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train)
    X_test = scaler.transform(X_test)

    # สร้างโมเดล SVM และ Train
    svm_model = SVC(kernel='rbf', C=1.0, gamma='scale', random_state=42)
    svm_model.fit(X_train, y_train)

    # คำนวณ Accuracy บน Test Set
    y_test_pred = svm_model.predict(X_test)
    test_accuracy = accuracy_score(y_test, y_test_pred)

    return svm_model, scaler, label_encoder, test_accuracy

# ส่วน UI หลักของ Streamlit
def main():
    st.title("Color to Season Classifier")
    st.write("This app predicts the season based on an RGB color value using a pre-trained model.")

    # โหลดข้อมูลจากไฟล์ color.csv
    st.write("Loading dataset...")
    df = load_fixed_data()

    # เทรนโมเดลด้วยข้อมูลจากไฟล์
    st.write("Training the model...")
    svm_model, scaler, label_encoder, test_accuracy = train_model(df)
    st.success(f"Model training completed! Test Set Accuracy: {test_accuracy:.2f}")

    # รับค่า RGB จากผู้ใช้
    st.write("Enter RGB values to predict the season:")
    r = st.number_input("Red (R)", min_value=0, max_value=255, value=128)
    g = st.number_input("Green (G)", min_value=0, max_value=255, value=128)
    b = st.number_input("Blue (B)", min_value=0, max_value=255, value=128)

    if st.button("Predict Season"):
        # เตรียมข้อมูล RGB สำหรับพยากรณ์
        rgb_input = np.array([[r, g, b]]) / 255.0  # Normalize
        rgb_input = scaler.transform(rgb_input)  # Scale

        # ทำนายผล
        prediction = svm_model.predict(rgb_input)
        predicted_season = label_encoder.inverse_transform(prediction)[0]

        st.write(f"The predicted season for RGB ({r}, {g}, {b}) is **{predicted_season}**.")

if __name__ == "__main__":
    main()